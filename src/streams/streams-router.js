/// <reference path="../../typings/tsd.d.ts" />
'use strict';
var item_store_1 = require('../item-store');
var DevicesRouter = (function () {
    function DevicesRouter() {
        var _this = this;
        this.fetchCurrent = function (req, res, next) {
            var path = req.query['path'];
            var at = req.query['at'];
            //TODO: support interval, path
            var current = _this.store.getCurrent(null, at);
            var dbg = '';
            for (var i in current) {
                dbg += current[i].sequence
                    + '\t' + current[i].id
                    + '\t' + current[i].timestamp
                    + '\t' + current[i].value
                    + '\n';
            }
            res.send(dbg);
        };
        this.fetchSamples = function (req, res, next) {
            var path = req.query['path'];
            var from = req.query['from'];
            var count = req.query['count'];
            //TODO: support interval, path
            var samples = _this.store.getSample(null, from, count);
            var dbg = '';
            for (var i in samples) {
                dbg += samples[i].sequence
                    + '\t' + samples[i].id
                    + '\t' + samples[i].timestamp
                    + '\t' + samples[i].value
                    + '\n';
            }
            res.send(dbg);
        };
        this.store = new item_store_1.ItemStore();
        this.store.recordSample({ id: 'x1', value: 100.00 });
        this.store.recordSample({ id: 'x1', value: 101.00 });
        this.store.recordSample({ id: 'z1', value: 7 });
        this.store.recordSample({ id: 'x1', value: 102.03 });
        this.store.recordSample({ id: 'x1', value: 103.1 });
        this.store.recordSample({ id: 'x1', value: 104.30 });
        this.store.recordSample({ id: 'z1', value: 7.1 });
        this.store.recordSample({ id: 'x1', value: 105.20 });
    }
    return DevicesRouter;
}());
module.exports = DevicesRouter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyZWFtcy1yb3V0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzdHJlYW1zLXJvdXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0MsWUFBWSxDQUFDO0FBR2IsMkJBQXdCLGVBRXhCLENBQUMsQ0FGc0M7QUFFdkM7SUFJSTtRQUpKLGlCQXFEQztRQXBDVSxpQkFBWSxHQUFHLFVBQUMsR0FBb0IsRUFBRSxHQUFxQixFQUFFLElBQWM7WUFDOUUsSUFBSSxJQUFJLEdBQVcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtZQUNwQyxJQUFJLEVBQUUsR0FBVyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFBO1lBQ2hDLDhCQUE4QjtZQUM5QixJQUFJLE9BQU8sR0FBRyxLQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUE7WUFFN0MsSUFBSSxHQUFHLEdBQVcsRUFBRSxDQUFBO1lBQ3BCLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUTtzQkFDcEIsSUFBSSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO3NCQUNwQixJQUFJLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7c0JBQzNCLElBQUksR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSztzQkFDdkIsSUFBSSxDQUFBO1lBQ2QsQ0FBQztZQUNELEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDakIsQ0FBQyxDQUFBO1FBRU0saUJBQVksR0FBRyxVQUFDLEdBQW9CLEVBQUUsR0FBcUIsRUFBRSxJQUFjO1lBQzlFLElBQUksSUFBSSxHQUFXLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUE7WUFDcEMsSUFBSSxJQUFJLEdBQVcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtZQUNwQyxJQUFJLEtBQUssR0FBVyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1lBRXRDLDhCQUE4QjtZQUM5QixJQUFJLE9BQU8sR0FBRyxLQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRXRELElBQUksR0FBRyxHQUFXLEVBQUUsQ0FBQTtZQUNwQixHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUNwQixHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVE7c0JBQ3BCLElBQUksR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtzQkFDcEIsSUFBSSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO3NCQUMzQixJQUFJLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUs7c0JBQ3ZCLElBQUksQ0FBQTtZQUNkLENBQUM7WUFDRCxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLENBQUMsQ0FBQTtRQTlDRyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksc0JBQVMsRUFBRSxDQUFBO1FBRTVCLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQTtRQUNwRCxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUE7UUFDcEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQy9DLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQTtRQUNwRCxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUE7UUFDbkQsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFBO1FBQ3BELElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQTtRQUNqRCxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUE7SUFDeEQsQ0FBQztJQXNDTCxvQkFBQztBQUFELENBQUMsQUFyREQsSUFxREM7QUFFRCxpQkFBUyxhQUFhLENBQUMifQ==